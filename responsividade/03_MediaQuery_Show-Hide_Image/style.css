
/*
Mobile First
Your small screen styles are in your regular screen CSS and then as the screen gets larger you override what you need to. 
So, min-width media queries in general.

Desktop First
Your large screen styles are in your regular screen CSS and then as the screen gets smaller you override what you need to. 
So, max-width media queries in general.
*/

html, body {height: 100%; margin: 0px;}

.container{ /* To start using the Flexbox model, you need to first define a flex container. */
    display: flex;
    height: 100%;
    margin: 0px;
}

.fixed{
    width: 100%;
    text-align: center;
    color: white;
    background: #45577a;
    padding: 10px;
}

.flex-item{
    display: none; /* The element is completely removed */
}



input[type=text], input[type=password] {
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  box-sizing: border-box;
}

button {
  background-color: #04AA6D;
  color: white;
  padding: 14px 20px;
  margin: 8px 0;
  border: none;
  cursor: pointer;
}

button:hover {
  opacity: 0.8;
}

button {
  width: 100%;
}


/* ************************************************************************* */

/*
Media query is a CSS technique introduced in CSS3.
It uses the @media rule to include a block of CSS properties only if a certain condition is true.
*/
@media (min-width: 600px) {

    button {
      width: auto; /* The browser calculates the width */
    } 

    .fixed{
        width: 600px;
    }

    .flex-item{
        flex-grow: 1; /* The flex-grow property specifies how much the item will grow relative to the rest of the flexible items inside the same container. */
        display: block; /* Displays an element as a block element (like <p>). It starts on a new line, and takes up the whole width */
        background-image: url("background.jpg");         
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }



}
